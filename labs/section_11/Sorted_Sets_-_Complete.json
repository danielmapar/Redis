{"name":"Sorted Sets - Complete","fileName":"My Selfish Great Notebook.json","createdAt":"2022-03-29T14:50:37.313Z","cells":[{"id":"1648570891929","type":"markdown","content":"Sorted sets combine aspects of hashes and sets.\n\nA sorted set contains a collection of member-score pairs.\n \n* Each member is a string, and is guaranteed to be unique\n* Each score is a number.  Different members can have the same score.\n* The members are sorted in ascending (least to greatest) order based upon their scores"},{"id":"1648570970909","type":"markdown","content":"`ZADD` is used to add a member-score pair to a sorted set.  The command is a little unusual - you first provide the score *then* the member.\n\n`ZSCORE` returns the score of a member.\n\n`ZREM` removes a member-value pair."},{"id":"5fff3556aad696dd","type":"redis","content":"ZADD products 45 monitor\n\nZSCORE products monitor\n\nZREM products monitor\n\nZSCORE products monitor"},{"id":"1648571016273","type":"markdown","content":"`ZCARD` returns the total number of members in a sorted set."},{"id":"1648567553396","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZCARD products"},{"id":"1648571029490","type":"markdown","content":"`ZCOUNT` is very similar to `ZCARD`, but includes from filtering criteria.\n\nYou can use `ZCOUNT` to find the number of members between a range of two scores.  By default, these scores are *inclusive*.\n\nThere is a variation on the score syntax.  Adding in an opening paren before a score (E.g. `(45`) changes the comparison to 'greater than' when applied to the lower bounds, or 'less than' when applied to the upper bound.\n\nYou can also use `-inf` or `+inf` to specify negative or positive infinity, respectively."},{"id":"1648567638796","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZCOUNT products -inf 40"},{"id":"1648571155341","type":"markdown","content":"`ZPOPMIN` removes and returns the member with the lowest score."},{"id":"1648568079618","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZPOPMIN products 2"},{"id":"1648571149409","type":"markdown","content":"`ZPOPMAX` removes and returns the member with the greatest score."},{"id":"1648568103577","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZPOPMAX products 2"},{"id":"1648571184501","type":"markdown","content":"`ZINCRBY` adjusts the score of an existing member-score pair.\n\nProvide a negative number to subtract from a score."},{"id":"1648569536594","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZINCRBY products 15 cpu\n\nZSCORE products cpu"},{"id":"1648571204887","type":"markdown","content":"`ZRANGE` can return a range of different members from a sorted set.  It has many variations.\n\nBy default, `ZRANGE` only returns members, filtered by their rank (index) in sorted set.  This rank value is 0-indexed."},{"id":"1648569762427","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZRANGE products 1 2"},{"id":"1648571261857","type":"markdown","content":"To filter members based on their scores, add the `BYSCORE` argument.\n\nTo include the score of each member - in addition to the member itself - add the `WITHSCORES` argument."},{"id":"1648569859858","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZRANGE products -inf +inf BYSCORE WITHSCORES"},{"id":"1648571303240","type":"markdown","content":"The `REV` argument will reverse the results set *before* any filtering is applied."},{"id":"1648570145752","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZRANGE products 1 2 REV"},{"id":"1648571328664","type":"markdown","content":"The `LIMIT` argument can be used to set up pagination.\n\n`LIMIT` receives two numbers, specifying the number of elements to skip (offset), and the number of elements to return (count)."},{"id":"1648570532941","type":"redis","content":"DEL products\n\nZADD products 45 cpu\nZADD products 10 keyboard\nZADD products 55 power\n\nZRANGE products 0 60 BYSCORE LIMIT 0 3"}],"id":"3e2291263ca1987f"}