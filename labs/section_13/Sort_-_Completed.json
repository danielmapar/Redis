{"name":"Sort - Completed","fileName":"My Unrealistic Choice Notebook.json","createdAt":"2022-03-30T17:10:28.548Z","cells":[{"id":"1648739331401","type":"markdown","content":"The `SORT` command has two primary uses:\n\n1. Sort a set, sorted set, or list\n2. Join together data from a set, sorted set, or list with data stored in a hash"},{"id":"de77c10fe5ba62ed","type":"redis","content":"HSET books:good title 'Good Book' year 1950\nHSET books:bad title 'Bad Book' year 1930\nHSET books:ok title 'OK Book' year 1940\n\nZADD books:likes 999 good\nZADD books:likes 0 bad\nZADD books:likes 40 ok"},{"id":"1648739398618","type":"markdown","content":"When used on a sorted set, `SORT` operates on the *members*, not the scores.\n\nBy default, `SORT` will try to sort the members numerically, from least to greatest.\n\nIf the members are strings, you must add in the `ALPHA` argument, which will sort the members alphabetically."},{"id":"1648665792489","type":"redis","content":"SORT books:likes ALPHA"},{"id":"1648739457745","type":"markdown","content":"The `LIMIT` argument can be used to restrict how many records are returned.  \n\n`LIMIT` is given two values.  The first indicates how many records to skip over in the result set.  The second indicates how many records to return."},{"id":"1648665985890","type":"redis","content":"SORT books:likes LIMIT 1 2 ALPHA"},{"id":"1648739506352","type":"markdown","content":"The `BY` argument provides the sort criteria.  \n\nIn the below example, `books:*->year` tell `SORT` to go through the following steps:\n\n1. Take each member out of the sorted set and loop over them\n2. Insert each member, one at a time, into the `BY` template. For example, the member `bad` will result in `books:bad->year`.\n3. `SORT` tries to look up a key in Redis with the completed template.  For example, `books:bad`.  If a hash exists at that key, `->year` tells `SORT` to return the `year` field of the hash.\n4. The returned `year` field is used to sort the original member of `bad`\n\nIf the key provided to `BY` does not exist, then no sorting will be done."},{"id":"1648666600012","type":"redis","content":"SORT books:likes BY books:*->year"},{"id":"1648739695025","type":"markdown","content":"`GET` is used to modify what values get returned by `SORT`.  `GET` can be used multiple times.\n\n`#` will return the member that is being sorted."},{"id":"1648667281268","type":"redis","content":"SORT books:likes BY nosort DESC\n    GET #\n    GET books:*->title\n    GET books:*->year"}],"id":"29140198ac423f59"}